@inherits FluxorComponent
@inject IState<GameState> GameState
@inject IDispatcher Dispatcher

<section class="card" style="@CssStyle">
    <div class="card-header">
        <b>Table</b>
    </div>
    <div class="card-body p-0">
        @if (GameState.Value.CardsOnTable is null || !GameState.Value.CardsOnTable.Any())
        {
            <div class="h-100 w-100 d-flex justify-content-center align-items-center">
                <p>
                    There are no cards right now. Please wait for each player to play their answer.
                </p>
            </div>
        }
        else if (GameState.Value.PlayersSelections is not null)
        {
            <div class="game-card-list h-100 d-flex align-items-center">
                @foreach (var (username, playersSelection) in GameState.Value.PlayersSelections)
                {
                    <div class="selectable-game-card selected mr-4">
                        @foreach (var card in playersSelection)
                        {
                            <article class="game-card answer-card">
                                <div class="dummy"></div>
                                <header class="game-card-header">
                                    <p>@card.Text</p>
                                </header>
                            </article>
                        }
                        <span class="caption">@username</span>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="game-card-list h-100 d-flex align-items-center">
                @foreach (var playersSelection in GameState.Value.CardsOnTable)
                {
                    <div class="selectable-game-card d-flex mr-4 @(IsSelected(playersSelection) ? "selected": string.Empty)" @onclick="() => OnWinningCardSetSelected(playersSelection)">
                        @foreach (var card in playersSelection)
                        {
                            <article class="game-card answer-card">
                                <div class="dummy"></div>
                                <header class="game-card-header">
                                    <p>@card.Text</p>
                                </header>
                            </article>
                        }
                        <span class="caption">@(IsSelected(playersSelection) ? "SELECTED": string.Empty)</span>
                    </div>
                }
            </div>
        }
    </div>
</section>

@code {
    [Parameter]
    public string CssStyle { get; set; } = string.Empty;


    void OnWinningCardSetSelected(IReadOnlyList<AnswerCard> playerSelection)
    {
        if (!GameState.Value.IsCardCzar) return;

        Dispatcher.Dispatch(new WinnerSelectedAction(playerSelection));
    }

    bool IsSelected(IReadOnlyList<AnswerCard> playerSelection) => playerSelection == GameState.Value.SelectedCardsOnTable;
}
