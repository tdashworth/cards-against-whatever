@inherits FluxorComponent
@inject IState<GameState> GameState
@inject IDispatcher Dispatcher

<section class="card" style="@CssStyle">
    <div class="card-header">
        <b>Your Hand</b>
    </div>
    <div class="card-body p-0">
        @if (GameState.Value.CardsInHand is null || !GameState.Value.CardsInHand.Any())
        {
            <div class="h-100 w-100 d-flex justify-content-center align-items-center">
                <p>
                    You don't have any cards right now. You'll be dealt cards at the start of each round.
                </p>
            </div>
        }
        else
        {

            <div class="game-card-list h-100 d-flex align-items-center">
                @foreach (var card in GameState.Value.CardsInHand)
                {
                    <div class="selectable-game-card @(IsSelected(card) ? "selected" : string.Empty) mr-4">
                        <article class="game-card answer-card" @onclick="() => OnCardSelected(card)">
                            <div class="dummy"></div>
                            <header class="game-card-header">
                                <p>@card.Text</p>
                            </header>
                        </article>
                        <span class="caption">@(IsSelected(card) ? "SELECTED": string.Empty)</span>
                    </div>
                }
            </div>
        }
    </div>
</section>

@code {
    [Parameter]
    public string CssStyle { get; set; } = string.Empty;

    void OnCardSelected(AnswerCard card) => Dispatcher.Dispatch(new AnswerSelectedAction(card));

    bool IsSelected(AnswerCard card) => GameState.Value.SelectedCardsInHand?.Contains(card) ?? false;
}
