@inherits FluxorComponent
@inject IState<GameState> GameState

<section class="card" style="@CssStyle">
    <div class="card-header">
        <b>Players</b>
    </div>
    @if (GameState.Value.Players is null || !GameState.Value.Players.Any())
    {
        <div class="h-100 w-100 d-flex justify-content-center align-items-center">
            <p>
                There are no players at the moment. Please wait for players to join.
            </p>
        </div>
    }
    else
    {
        <ul class="list-group list-group-flush" style="overflow-y: auto;">
            @foreach (var player in GameState.Value.Players)
            {
                <li class="list-group-item">
                    @player.Username
                    <span class="badge badge-pill badge-primary">@player.Score</span>
                    <span class="float-right">@PlayerStateFormat[player.Status]</span>
                </li>
            }
            <li class="list-group-item"></li>
        </ul>
    }
</section>

@code {
    [Parameter]
    public string CssStyle { get; set; } = string.Empty;

    Dictionary<PlayerStatus, string> PlayerStateFormat = new()
    {
        { PlayerStatus.AnswerPlayed, "I'm done!" },
        { PlayerStatus.AwatingAnswers, "Awaiting your answers..." },
        { PlayerStatus.Lobby, "Chilling in the lobby" },
        { PlayerStatus.Left, "Sorry, I've left" },
        { PlayerStatus.SelectingWinner, "Hummm, who's is the best..." },
        { PlayerStatus.PlayingAnswer, "Hummm, what do I play..." },
    };

}
